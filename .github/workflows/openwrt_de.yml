name: openwrt de

on:
  push:
    branches: 
      - master
    paths:
      - '.github/workflows/openwrt_de.yml'
  schedule:
    - cron: '0 18 */5 * *'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler zip unzip
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
          pwd
          dir
 
      - name: clone git
        run: |
          git clone https://github.com/openwrt/openwrt.git
          pwd
          dir
      - name: Update feeds
        run: |
          pwd
          dir
          ./scripts/feeds update -a
          ./scripts/feeds install -a
  
      - name: Generate configuration file
        run: |          
          make defconfig
          #wget https://raw.githubusercontent.com/uosX/openwrt/master/compile.config
          #cat compile.config
          #cat compile.config >> .config          
  
      - name: Make download
        run: |
          make download -j8          
          df -h
 
      - name: Compile firmware
        run: |
          make V=99
          
      - name: Prepare artifact
        run: |
          
          rm -rf ./artifact/
          mkdir ./artifact/
          
          pwd
          ls bin/targets/x86
          cp .config ./artifact/
                
      #- name: Assemble Artifact
      #  run: |
      #    find bin/targets/x86 -name "openwrt_*img*" | xargs -i mv -f {} ./artifact/          
          
      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: openwrt
          path: ./artifact/
          
          
