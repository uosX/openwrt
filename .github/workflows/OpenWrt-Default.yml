name: OpenWrt-Default

on:
  push:
    branches: 
      - master
    paths:
      - '.github/workflows/OpenWrt-Default.yml'
  schedule:
    - cron: '0 */6 * * *'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
          pwd
 
      - name: clone git
        run: |
          git clone https://github.com/openwrt/openwrt.git
          pwd
      - name: Update feeds
        run: |
          #cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          pwd
  
      - name: Generate configuration file
        run: |
          #cd openwrt
          make defconfig
          cat ../.config > ./.config
          pwd
  
      - name: Make download
        run: |
          #cd openwrt
          make -j8 download V=99
          #find ./dl/ -size -1024c -exec rm -f {} \;
          df -h
          pwd
 
      - name: Compile firmware
        run: |
          #cd openwrt
          make V=99
          pwd
          
      - name: Prepare artifact
        run: |
          cp ./.config ./artifact/
          cd ./bin/targets/
          ls ./bin/targets/
          ls ./targets/
          #zip -r pake.zip ./          
          #cp pake.zip ./artifact/
          pwd
          
      - name: Zip Files
        run: |
          find bin/targets/ -name "openwrt_*img*" | xargs -i zip -r {}.zip {}
          
      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find bin/targets/ -name "openwrt_*img.zip*" | xargs -i mv -f {} ./artifact/
          
      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: openwrt
          path: ./artifact/
