name: openwrt

on:
  push:
    branches: 
      - master
    paths:
      - '.github/workflows/openwrt.yml_'
  schedule:
    - cron: '10 09 * * *'

jobs:

  build:
    
    runs-on: ubuntu-latest
    
    steps:
      
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget
                  
      - name: Init Source
        run: |
          git clone https://github.com/coolsnowwolf/lede
          
      - name: Mod luci
        run: |
          cd lede
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
          
      - name: Build FriendlyWrt
        run: |
          cd lede
          git pull
          ./scripts/feeds update -a && ./scripts/feeds install -a
          make defconfig
          make -j8 download
          make -j$(($(nproc) + 1)) V=s
      
      - name: Zip Files
        run: |
          gzip lede/out/*.img
      - name: Assemble Artifact
        id: assemble_artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          mv lede/out/*img* ./artifact/
          cp lede/*/.config ./artifact/
          zip -r artifact.zip ./artifact/
          release_tag="openwrt-$(date +%Y%m%d)"
          echo "##[set-output name=release_tag;]$release_tag"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token }}
        with:
          tag_name: ${{ steps.assemble_artifact.outputs.release_tag }}
          release_name: 自动发布 ${{ steps.assemble_artifact.outputs.release_tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./artifact.zip
          asset_name: ${{ steps.assemble_artifact.outputs.release_tag }}-ROM.zip
          asset_content_type: application/zip
